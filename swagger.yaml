swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transaction:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transaction list
      description: API for Transaction
      produces:
        - application/json
      responses:
        "200":
          description: Fetch Successfully
          schema:
            $ref: "#/definitions/TransactionListResponse"
        "500":
          description: Internal Server Error
  /transaction/{transactionid}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transaction details
      description: API for Transaction
      parameters:
        - name: transactionid
          in: path
          description: ID of transaction to return
          required: true
          schema:
            type: integer
            format: int64
      produces:
        - application/json
      responses:
        "200":
          description: Fetch Successfully
    patch:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Edit Transaction
      description: API for Transaction
      parameters:
        - name: transactionid
          in: path
          description: ID of transaction to edit
          required: true
          schema:
            type: integer
            format: int64
        - in: body
          name: body
          description: Edit Transaction Payload
          required: true
          schema:
            $ref: "#/definitions/EditTransaction"
      produces:
        - application/json
      responses:
        "200":
          description: Edit Successfully
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  TransactionListResponse:
    properties:
      date:
        type: string
        description: Transaction date
      description:
        type: string
        description: Transaction description
      amount:
        type: integer
        description: Transaction amount
      balance:
        type: integer
        description: Transaction balance
  TransactionDetailsResponse:
    properties:
      date:
        type: string
        description: Transaction date
      description:
        type: string
        description: Transaction description
      amount:
        type: integer
        description: Transaction amount
      balance:
        type: integer
        description: Transaction balance
      transactionType:
        type: string
        description: Transaction transactionType
      category:
        type: string
        description: Transaction category
      note:
        type: string
        description: Transaction note
  EditTransaction:
    type: object
    properties:
      category:
        type: string
        description: The new category for the transaction.
      note:
        type: string
        description: The new note for the transaction.
    required:
      - category
      - note
